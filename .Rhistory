source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/Run_DLM.R")
#----------- DLM calibration -----
df.delta <- DLM_cali(df, train.sp=1)
Data <- read.csv("Data_test.csv")
#--------- preprocess data -----
df <- Data_preprocess(Data)
#------------------------------
dates <- df$Date
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
#----------- DLM calibration -----
df.delta <- DLM_cali(df, train.sp=1)
delta0 <- df.delta$Delta0
delta1 <- df.delta$Delta1
delta0 <- df.delta$Delta0
delta1 <- df.delta$Delta1
print(delta0)
print(delta1)
df=df
train.sp=1
N <- dim(df)[1]
if (train.sp < 1){
N.train <- round(N*train.sp)
} else {
N.train <- train.sp*365
}
df <- df[1:N.train,]
Xt <- df$Xt
Yt <- df$Yt
head(df)
i 1
i = 1
j = 1
DLM.Data <- DLM(X=Xt, Y=Yt,
delta1=delta.0[i], delta2=delta.1[j])
#------------ calibration ----
delta.1 <- c(seq(0.98, 0.999, by=0.002),0.999,0.9995,0.9999)
delta.0 <- seq(0.7, 0.99, by=0.01)
NSE.log.v <- array(NA, c(length(delta.0),length(delta.1)))
DLM.Data <- DLM(X=Xt, Y=Yt,
delta1=delta.0[i], delta2=delta.1[j])
#--------- calibrate using sum of sq error
ee.orig <- DLM.Data$e.orig
ee.log <- DLM.Data$e
df.orig <- data.frame("x" = exp(Yt), "y" = ee.orig)
df.orig <- df.orig[complete.cases(df.orig),]
sse.orig <- sum(df.orig$y^2)
sse.orig
e.orig <- sse.orig/sum((df.orig$x-mean(df.orig$x))^2)
df.log <- data.frame("x" = Yt, "y" = ee.log)
df.log <- df.log[complete.cases(df.log),]
sse.log <- sum(df.log$y^2)
e.log <- sse.log/sum((df.log$x-mean(df.log$x))^2)
NSE.log.v[i,j] <- e.orig + e.log
NSE.log.v[i,j]
df.delta
#----------- DLM calibration -----
df.delta <- DLM_cali(df=df, train.sp=1)
delta0 <- df.delta$df.delta$Delta0
delta1 <- df.delta$df.delta$Delta1
print(delta0)
print(delta1)
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/Run_DLM.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
#----- run DLM model -----
DLM.sp <- DLM(X=x, Y=y, delta1=delta0,delta2=delta1, sq = sq.sp)
R2.log <- NSE(y, DLM.sp$f)
R2 <- NSE(exp(y), exp(DLM.sp$f))
#----- print results ----------
par(mfrow=c(2,2),mar=c(2.5,2.5,1,1), mgp=c(1.5,0.5,0))
par(cex.lab = 1, cex.sub = 1, cex.axis = 1, cex = 1, font = 1)
options(scipen=10)
y.min <- min(exp(y),exp(DLM.sp$f), na.rm = T)
y.max <- max(exp(y),exp(DLM.sp$f), na.rm = T)
plot(exp(DLM.sp$f), exp(y), log = "xy",
ylim = c(y.min, y.max),
xlim = c(y.min, y.max),
xlab = "Est", ylab = "Obs")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
paste0("Model: ", m.lab),
paste0("delta0: ", delta0),
paste0("delta1: ", delta1),
paste0("NSE(log): ", round(R2.log,2)),
paste0("NSE: ", round(R2,2))
),
cex = 0.8,
bty = "n")
plot(dates, exp(y),ylim = c(y.min, y.max),
log = "y",col = "forestgreen",
xlab = "Date", ylab = "Water quality")
lines(dates, exp(DLM.sp$f), col = "firebrick")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
"Observation",
"Estimation"
),
lty = c(NA,1),
pch = c(1, NA),
col = c("forestgreen", "firebrick"),
cex = 0.8,
bty = "n")
plot(df$Date, DLM.sp$m[,1],
ylim = c(-10,10),  type = "l",
xlab = "Date", ylab="Intercept")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
plot(df$Date, DLM.sp$m[,2],
ylim = c(-10,10),  type = "l",
xlab= "Date", ylab="Slope")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
#----- print results ----------
par(mfrow=c(2,2),mar=c(2.5,2.5,1,1), mgp=c(1.5,0.5,0))
par(cex.lab = 1, cex.sub = 1, cex.axis = 1, cex = 1, font = 1)
options(scipen=10)
y.min <- min(exp(y),exp(DLM.sp$f), na.rm = T)
y.max <- max(exp(y),exp(DLM.sp$f), na.rm = T)
plot(exp(DLM.sp$f), exp(y), log = "xy",
ylim = c(y.min, y.max),
xlim = c(y.min, y.max),
xlab = "Est", ylab = "Obs")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
paste0("Model: ", m.lab),
paste0("Train (pct/years): ", train.sp),
paste0("delta0: ", delta0),
paste0("delta1: ", delta1)
), inset=c(0.01,0),
cex = 0.8,
bty = "n")
legend("bottomright",
legend = c(
paste0("NSE(log): ", round(R2.log,2)),
paste0("NSE: ", round(R2,2))
),
cex = 0.8,
bty = "n")
plot(dates, exp(y),ylim = c(y.min, y.max),
log = "y",col = "forestgreen",
xlab = "Date", ylab = "Water quality")
lines(dates, exp(DLM.sp$f), col = "firebrick")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
"Observation",
"Estimation"
),
lty = c(NA,1),
pch = c(1, NA),
col = c("forestgreen", "firebrick"),
cex = 0.8,
bty = "n")
plot(df$Date, DLM.sp$m[,1],
ylim = c(-10,10),  type = "l",
xlab = "Date", ylab="Intercept")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
plot(df$Date, DLM.sp$m[,2],
ylim = c(-10,10),  type = "l",
xlab= "Date", ylab="Slope")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
#----- print results ----------
par(mfrow=c(2,2),mar=c(2.5,2.5,1,1), mgp=c(1.5,0.5,0))
par(cex.lab = 1, cex.sub = 1, cex.axis = 1, cex = 1, font = 1)
options(scipen=10)
y.min <- min(exp(y),exp(DLM.sp$f), na.rm = T)
y.max <- max(exp(y),exp(DLM.sp$f), na.rm = T)
plot(exp(DLM.sp$f), exp(y), log = "xy",
ylim = c(y.min, y.max),
xlim = c(y.min, y.max),
xlab = "Est", ylab = "Obs")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
paste0("Model: ", m.lab),
paste0("Train (pct/years): ", train.sp),
paste0("delta0: ", delta0),
paste0("delta1: ", delta1)
), inset=c(-0.01,0),
cex = 0.8,
bty = "n")
legend("bottomright",
legend = c(
paste0("NSE(log): ", round(R2.log,2)),
paste0("NSE: ", round(R2,2))
),
cex = 0.8,
bty = "n")
plot(dates, exp(y),ylim = c(y.min, y.max),
log = "y",col = "forestgreen",
xlab = "Date", ylab = "Water quality")
lines(dates, exp(DLM.sp$f), col = "firebrick")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
"Observation",
"Estimation"
),
lty = c(NA,1),
pch = c(1, NA),
col = c("forestgreen", "firebrick"),
cex = 0.8,
bty = "n")
plot(df$Date, DLM.sp$m[,1],
ylim = c(-10,10),  type = "l",
xlab = "Date", ylab="Intercept")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
plot(df$Date, DLM.sp$m[,2],
ylim = c(-10,10),  type = "l",
xlab= "Date", ylab="Slope")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
#----- print results ----------
par(mfrow=c(2,2),mar=c(2.5,2.5,1,1), mgp=c(1.5,0.5,0))
par(cex.lab = 1, cex.sub = 1, cex.axis = 1, cex = 1, font = 1)
options(scipen=10)
y.min <- min(exp(y),exp(DLM.sp$f), na.rm = T)
y.max <- max(exp(y),exp(DLM.sp$f), na.rm = T)
plot(exp(DLM.sp$f), exp(y), log = "xy",
ylim = c(y.min, y.max),
xlim = c(y.min, y.max),
xlab = "Est", ylab = "Obs")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
paste0("Model: ", m.lab),
paste0("Train (pct/years): ", train.sp),
paste0("delta0: ", delta0),
paste0("delta1: ", delta1)
), inset=c(-0.1,0),
cex = 0.8,
bty = "n")
legend("bottomright",
legend = c(
paste0("NSE(log): ", round(R2.log,2)),
paste0("NSE: ", round(R2,2))
),
cex = 0.8,
bty = "n")
plot(dates, exp(y),ylim = c(y.min, y.max),
log = "y",col = "forestgreen",
xlab = "Date", ylab = "Water quality")
lines(dates, exp(DLM.sp$f), col = "firebrick")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
"Observation",
"Estimation"
),
lty = c(NA,1),
pch = c(1, NA),
col = c("forestgreen", "firebrick"),
cex = 0.8,
bty = "n")
plot(df$Date, DLM.sp$m[,1],
ylim = c(-10,10),  type = "l",
xlab = "Date", ylab="Intercept")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
plot(df$Date, DLM.sp$m[,2],
ylim = c(-10,10),  type = "l",
xlab= "Date", ylab="Slope")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
#----- print results ----------
par(mfrow=c(2,2),mar=c(2.5,2.5,1,1), mgp=c(1.5,0.5,0))
par(cex.lab = 1, cex.sub = 1, cex.axis = 1, cex = 1, font = 1)
options(scipen=10)
y.min <- min(exp(y),exp(DLM.sp$f), na.rm = T)
y.max <- max(exp(y),exp(DLM.sp$f), na.rm = T)
plot(exp(DLM.sp$f), exp(y), log = "xy",
ylim = c(y.min, y.max),
xlim = c(y.min, y.max),
xlab = "Est", ylab = "Obs")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
paste0("Model: ", m.lab),
paste0("Train (pct/years): ", train.sp),
paste0("delta0: ", delta0),
paste0("delta1: ", delta1)
), inset=c(-0.05,0),
cex = 0.8,
bty = "n")
legend("bottomright",
legend = c(
paste0("NSE(log): ", round(R2.log,2)),
paste0("NSE: ", round(R2,2))
),
cex = 0.8,
bty = "n")
plot(dates, exp(y),ylim = c(y.min, y.max),
log = "y",col = "forestgreen",
xlab = "Date", ylab = "Water quality")
lines(dates, exp(DLM.sp$f), col = "firebrick")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
"Observation",
"Estimation"
),
lty = c(NA,1),
pch = c(1, NA),
col = c("forestgreen", "firebrick"),
cex = 0.8,
bty = "n")
plot(df$Date, DLM.sp$m[,1],
ylim = c(-10,10),  type = "l",
xlab = "Date", ylab="Intercept")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
plot(df$Date, DLM.sp$m[,2],
ylim = c(-10,10),  type = "l",
xlab= "Date", ylab="Slope")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share/Run_DLM_test.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
#----- run DLM model -----
DLM.sp <- DLM(X=x, Y=y, delta1=delta0,delta2=delta1, sq = sq.sp)
R2.log <- NSE(y, DLM.sp$f)
R2 <- NSE(exp(y), exp(DLM.sp$f))
#------------------------
#----- print results ----------
filename <- paste0("DLM_results.jpeg")
jpeg(filename, width = 9, height = 7, units = "in", res = 300)
par(mfrow=c(2,2),mar=c(2.5,2.5,1,1), mgp=c(1.5,0.5,0))
par(cex.lab = 1, cex.sub = 1, cex.axis = 1, cex = 1, font = 1)
options(scipen=10)
y.min <- min(exp(y),exp(DLM.sp$f), na.rm = T)
y.max <- max(exp(y),exp(DLM.sp$f), na.rm = T)
plot(exp(DLM.sp$f), exp(y), log = "xy",
ylim = c(y.min, y.max),
xlim = c(y.min, y.max),
xlab = "Est", ylab = "Obs")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topleft",
legend = c(
paste0("Model: ", m.lab),
paste0("Train (pct/years): ", train.sp),
paste0("NSE(log): ", round(R2.log,2)),
paste0("NSE: ", round(R2,2))
), inset=c(-0.05,0),
cex = 0.8,
bty = "n")
plot(dates, exp(y),ylim = c(y.min, y.max),
log = "y",col = "forestgreen",
xlab = "Date", ylab = "Water quality")
lines(dates, exp(DLM.sp$f), col = "firebrick")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
legend("topright",
legend = c(
"Observation",
"Estimation"
),
lty = c(NA,1),
pch = c(1, NA),
col = c("forestgreen", "firebrick"),
cex = 0.8,
bty = "n")
plot(df$Date, DLM.sp$m[,1],
ylim = c(-5,5),  type = "l",
xlab = "Date", ylab="Intercept")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
plot(df$Date, DLM.sp$m[,2],
ylim = c(-5,5),  type = "l",
xlab= "Date", ylab="Slope")
grid(NULL, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = FALSE)
dev.off()
23.7*0.3048^3
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/share_Moura/Run_DLM.R")
7.37*0.3048^3
3,350*0.3048^3
3350*0.3048^3
Data.turb <- read.csv(paste0("data/Data_obs_turb_31.csv"))
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
head(Data)
3350*0.3048^3
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
y[1]/x[1]
y[1]
x[1]
median(df$Flow)
y[1]/median(df$Flow)
y[1]-x[1]
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
mean(c(513, 417.833333))
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
source("~/Library/CloudStorage/OneDrive-NYCEnvironmentalProtection/Cornell/Example/DLM-application/main.R")
